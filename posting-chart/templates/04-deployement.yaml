apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-deployment
  namespace: {{ .Values.namespace }}
  labels:
    deployment: user
spec:
  replicas: {{ .Values.app.user.replica }}
  selector:
    matchLabels:
      app: user-api
  template:
    metadata:
      labels:
        app: user-api
    spec:
      containers:
      - name: user-api
        image: "{{ .Values.app.user.image }}"
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 15
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 15
        env:
          - name: SPRING_DATASOURCE_URL
            valueFrom:
              configMapKeyRef:
                name: user-config-map
                key: SPRING_DATASOURCE_URL
          - name: SPRING_DATASOURCE_USERNAME
            valueFrom:
              secretKeyRef:
                name: user-db-credentials
                key: username
          - name: SPRING_DATASOURCE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: user-db-credentials
                key: password

---

apiVersion: v1
kind: Service
metadata:
  name: user-service
  namespace: {{ .Values.namespace }}
spec:
  type: {{ .Values.app.user.serviceType }}
  selector:
    app: user-api
  ports:
    - name: http
      port: 8080
      targetPort: 8080
      nodePort: {{ .Values.app.user.nodePort }}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: post-deployment
  namespace: {{ .Values.namespace }}
  labels:
    deployment: post
spec:
  replicas: {{ .Values.app.post.replica }}
  selector:
    matchLabels:
      app: post-api
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: post-api
    spec:
      containers:
      - name: post-api
        image: {{ .Values.app.post.image }}
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 15
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 15
        env:
          - name: SPRING_DATASOURCE_URL
            valueFrom:
              configMapKeyRef:
                name: post-config-map
                key: SPRING_DATASOURCE_URL
          - name: SPRING_DATASOURCE_USERNAME
            valueFrom:
              secretKeyRef:
                name: post-db-credentials
                key: username
          - name: SPRING_DATASOURCE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: post-db-credentials
                key: password
          - name: SERVICE_USER_URL
            value: {{ .Values.app.post.userServiceUrl }}

# Rollback commands
#kubectl rollout history deployment post-deployment
#kubectl rollout undo deployment post-deployment --to-revision=1
#kubectl rollout status deployment post-deployment
---

apiVersion: v1
kind: Service
metadata:
  name: post-service
  namespace: {{ .Values.namespace }}
spec:
  type: {{ .Values.app.post.serviceType }}
  selector:
    app: post-api
  ports:
    - name: http
      port: 8080
      targetPort: 8080
      nodePort: {{ .Values.app.post.nodePort }}
